{"version":3,"file":"static/js/247.88c81c29.chunk.js","mappings":"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","sources":["components/PageTitle/index.tsx","content/pages/Components/Badges/index.tsx"],"sourcesContent":["import { FC } from 'react';\nimport PropTypes from 'prop-types';\nimport AddTwoToneIcon from '@mui/icons-material/AddTwoTone';\nimport { Typography, Button, Grid } from '@mui/material';\n\ninterface PageTitleProps {\n  heading?: string;\n  subHeading?: string;\n  docs?: string;\n}\n\nconst PageTitle: FC<PageTitleProps> = ({\n  heading = '',\n  subHeading = '',\n  docs = '',\n  ...rest\n}) => {\n  return (\n    <Grid\n      container\n      justifyContent=\"space-between\"\n      alignItems=\"center\"\n      {...rest}\n    >\n      <Grid item>\n        <Typography variant=\"h3\" component=\"h3\" gutterBottom>\n          {heading}\n        </Typography>\n        <Typography variant=\"subtitle2\">{subHeading}</Typography>\n      </Grid>\n      <Grid item>\n        <Button\n          href={docs}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          sx={{ mt: { xs: 2, md: 0 } }}\n          variant=\"contained\"\n          startIcon={<AddTwoToneIcon fontSize=\"small\" />}\n        >\n          {heading} Documentation\n        </Button>\n      </Grid>\n    </Grid>\n  );\n};\n\nPageTitle.propTypes = {\n  heading: PropTypes.string,\n  subHeading: PropTypes.string,\n  docs: PropTypes.string\n};\n\nexport default PageTitle;\n","import { Helmet } from 'react-helmet-async';\nimport PageTitle from 'src/components/PageTitle';\nimport PageTitleWrapper from 'src/components/PageTitleWrapper';\nimport {\n  Container,\n  Grid,\n  Card,\n  CardHeader,\n  CardContent,\n  Divider\n} from '@mui/material';\nimport { useState } from 'react';\nimport Footer from 'src/components/Footer';\n\nimport ButtonGroup from '@mui/material/ButtonGroup';\nimport Button from '@mui/material/Button';\nimport AddIcon from '@mui/icons-material/Add';\nimport RemoveIcon from '@mui/icons-material/Remove';\nimport MailIcon from '@mui/icons-material/Mail';\nimport Switch from '@mui/material/Switch';\nimport FormControlLabel from '@mui/material/FormControlLabel';\n\nimport Box from '@mui/material/Box';\nimport Stack from '@mui/material/Stack';\nimport Badge from '@mui/material/Badge';\n\nconst shapeStyles = { bgcolor: 'primary.main', width: 40, height: 40 };\nconst shapeCircleStyles = { borderRadius: '50%' };\nconst rectangle = <Box component=\"span\" sx={shapeStyles} />;\nconst circle = (\n  <Box component=\"span\" sx={{ ...shapeStyles, ...shapeCircleStyles }} />\n);\n\nfunction Badges() {\n  const [count, setCount] = useState(1);\n  const [invisible, setInvisible] = useState(false);\n\n  const handleBadgeVisibility = () => {\n    setInvisible(!invisible);\n  };\n\n  return (\n    <>\n      <Helmet>\n        <title>Badges - Components</title>\n      </Helmet>\n      <PageTitleWrapper>\n        <PageTitle\n          heading=\"Badges\"\n          subHeading=\"Badge generates a small badge to the top-right of its child(ren).\"\n          docs=\"https://material-ui.com/components/badges/\"\n        />\n      </PageTitleWrapper>\n      <Container maxWidth=\"lg\">\n        <Grid\n          container\n          direction=\"row\"\n          justifyContent=\"center\"\n          alignItems=\"stretch\"\n          spacing={3}\n        >\n          <Grid item xs={12}>\n            <Card>\n              <CardHeader title=\"Shapes\" />\n              <Divider />\n              <CardContent>\n                <Stack spacing={3} direction=\"row\">\n                  <Badge color=\"secondary\" badgeContent=\" \">\n                    {rectangle}\n                  </Badge>\n                  <Badge color=\"secondary\" badgeContent=\" \" variant=\"dot\">\n                    {rectangle}\n                  </Badge>\n                  <Badge color=\"secondary\" overlap=\"circular\" badgeContent=\" \">\n                    {circle}\n                  </Badge>\n                  <Badge\n                    color=\"secondary\"\n                    overlap=\"circular\"\n                    badgeContent=\" \"\n                    variant=\"dot\"\n                  >\n                    {circle}\n                  </Badge>\n                </Stack>\n              </CardContent>\n            </Card>\n          </Grid>\n          <Grid item xs={12}>\n            <Card>\n              <CardHeader title=\"Badges Visibility\" />\n              <Divider />\n              <CardContent>\n                <Box\n                  sx={{\n                    color: 'action.active',\n                    display: 'flex',\n                    flexDirection: 'column',\n                    '& > *': {\n                      marginBottom: 2\n                    },\n                    '& .MuiBadge-root': {\n                      marginRight: 4\n                    }\n                  }}\n                >\n                  <div>\n                    <Badge color=\"secondary\" badgeContent={count}>\n                      <MailIcon />\n                    </Badge>\n                    <ButtonGroup>\n                      <Button\n                        aria-label=\"reduce\"\n                        onClick={() => {\n                          setCount(Math.max(count - 1, 0));\n                        }}\n                      >\n                        <RemoveIcon fontSize=\"small\" />\n                      </Button>\n                      <Button\n                        aria-label=\"increase\"\n                        onClick={() => {\n                          setCount(count + 1);\n                        }}\n                      >\n                        <AddIcon fontSize=\"small\" />\n                      </Button>\n                    </ButtonGroup>\n                  </div>\n                  <div>\n                    <Badge\n                      color=\"secondary\"\n                      variant=\"dot\"\n                      invisible={invisible}\n                    >\n                      <MailIcon />\n                    </Badge>\n                    <FormControlLabel\n                      sx={{ color: 'text.primary' }}\n                      control={\n                        <Switch\n                          checked={!invisible}\n                          onChange={handleBadgeVisibility}\n                        />\n                      }\n                      label=\"Show Badge\"\n                    />\n                  </div>\n                </Box>\n              </CardContent>\n            </Card>\n          </Grid>\n          <Grid item xs={12}>\n            <Card>\n              <CardHeader title=\"Colors\" />\n              <Divider />\n              <CardContent>\n                <Stack spacing={2} direction=\"row\">\n                  <Badge badgeContent={4} color=\"secondary\">\n                    <MailIcon color=\"action\" />\n                  </Badge>\n                  <Badge badgeContent={4} color=\"success\">\n                    <MailIcon color=\"action\" />\n                  </Badge>\n                </Stack>\n              </CardContent>\n            </Card>\n          </Grid>\n        </Grid>\n      </Container>\n      <Footer />\n    </>\n  );\n}\n\nexport default Badges;\n"],"names":["_ref","heading","subHeading","docs","rest","_objectWithoutProperties","_excluded","_jsxs","Grid","_objectSpread","container","justifyContent","alignItems","children","item","_jsx","Typography","variant","component","gutterBottom","Button","href","target","rel","sx","mt","xs","md","startIcon","AddTwoToneIcon","fontSize","shapeStyles","bgcolor","width","height","rectangle","Box","circle","borderRadius","count","setCount","useState","invisible","setInvisible","_Fragment","Helmet","PageTitleWrapper","PageTitle","Container","maxWidth","direction","spacing","Card","CardHeader","title","Divider","CardContent","Stack","Badge","color","badgeContent","overlap","display","flexDirection","marginBottom","marginRight","MailIcon","ButtonGroup","onClick","Math","max","RemoveIcon","AddIcon","FormControlLabel","control","Switch","checked","onChange","handleBadgeVisibility","label","Footer"],"sourceRoot":""}